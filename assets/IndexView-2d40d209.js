import{o as openBlock,c as createElementBlock,a as createStaticVNode,d as defineComponent,r as ref,b as onMounted,e as onUnmounted,f as createBaseVNode,g as createVNode,t as toDisplayString,F as Fragment,h as renderList,u as unref,n as normalizeClass}from"./index-be512e77.js";const buttons=[{symbol:"AC",background:"bg-secondary",size:"col-span-1"},{symbol:"DE",background:"bg-secondary",size:"col-span-1"},{symbol:".",background:"bg-secondary",size:"col-span-1"},{symbol:"÷",background:"bg-secondary",size:"col-span-1"},{symbol:"7",background:"bg-primary",size:"col-span-1"},{symbol:"8",background:"bg-primary",size:"col-span-1"},{symbol:"9",background:"bg-primary",size:"col-span-1"},{symbol:"×",background:"bg-secondary",size:"col-span-1"},{symbol:"4",background:"bg-primary",size:"col-span-1"},{symbol:"5",background:"bg-primary",size:"col-span-1"},{symbol:"6",background:"bg-primary",size:"col-span-1"},{symbol:"-",background:"bg-secondary",size:"col-span-1"},{symbol:"1",background:"bg-primary",size:"col-span-1"},{symbol:"2",background:"bg-primary",size:"col-span-1"},{symbol:"3",background:"bg-primary",size:"col-span-1"},{symbol:"+",background:"bg-secondary",size:"col-span-1"},{symbol:"0",background:"bg-primary",size:"col-span-1"},{symbol:"00",background:"bg-primary",size:"col-span-1"},{symbol:"=",background:"bg-secondary",size:"col-span-2"}],_export_sfc=(e,a)=>{const s=e.__vccOpts||e;for(const[o,l]of a)s[o]=l;return s},_sfc_main$1={},_hoisted_1$1={class:"bg-gray-100 p-6 rounded-lg max-w-2xl mx-auto"},_hoisted_2$1=createStaticVNode('<h2 class="text-xl font-semibold mb-4">Keyboard Shortcuts</h2><p class="mb-4">Use your keyboard to operate the calculator more efficiently. Here are the shortcuts you can use:</p><ul class="list-disc pl-5 space-y-2"><li><kbd class="bg-gray-200 p-1 rounded">0-9</kbd> - Press the number keys to enter numbers into the calculator.</li><li><kbd class="bg-gray-200 p-1 rounded">.</kbd> - Press the period key to enter a decimal point.</li><li><kbd class="bg-gray-200 p-1 rounded">+</kbd> - Press the plus key for addition.</li><li><kbd class="bg-gray-200 p-1 rounded">-</kbd> - Press the minus key for subtraction.</li><li><kbd class="bg-gray-200 p-1 rounded">*</kbd> - Press the asterisk key for multiplication.</li><li><kbd class="bg-gray-200 p-1 rounded">/</kbd> - Press the forward slash for division.</li><li><kbd class="bg-gray-200 p-1 rounded">Enter</kbd> - Press Enter to calculate the result.</li><li><kbd class="bg-gray-200 p-1 rounded">Esc</kbd> - Press Escape to clear the current input (AC).</li><li><kbd class="bg-gray-200 p-1 rounded">Backspace</kbd> - Press Backspace to delete the last entry (DE).</li></ul>',3),_hoisted_5$1=[_hoisted_2$1];function _sfc_render(e,a){return openBlock(),createElementBlock("div",_hoisted_1$1,_hoisted_5$1)}const UserManual=_export_sfc(_sfc_main$1,[["render",_sfc_render]]),_hoisted_1={class:"flex flex-wrap justify-center"},_hoisted_2={class:"w-full lg:w-1/2"},_hoisted_3={class:"w-full lg:w-1/2 bg-gray-800 p-10 rounded-xl max-w-2xl"},_hoisted_4={class:"calculator-font calculator-display p-5 text-right text-white text-3xl mb-4 bg-gray-700 rounded h-16"},_hoisted_5={class:"grid grid-cols-4 gap-4"},_hoisted_6=["data-key","onClick"],_sfc_main=defineComponent({__name:"IndexView",setup(__props){const display=ref(""),calculate=()=>{try{display.value=eval(display.value.replace("×","*").replace("÷","/")).toString()}catch(e){display.value="Error"}},onButtonClick=e=>{switch(e){case"AC":display.value="";break;case"DE":display.value=display.value.slice(0,-1);break;case"=":calculate();break;default:display.value+=e}},animateButton=e=>{const s={"*":"×","/":"÷"}[e]||e,o=document.querySelector(`button[data-key="${s}"]`);o&&(o.classList.add("animate"),setTimeout(()=>{o.classList.remove("animate")},200))},appendSymbol=e=>{display.value+=e,animateButton(e)},deleteLastEntry=()=>{display.value=display.value.slice(0,-1),display.value.endsWith(".")&&(display.value=display.value.slice(0,-1))},clearAll=()=>{display.value=""},handleKeydown=e=>{const{key:a}=e,s=parseFloat(a);if(!isNaN(s))appendSymbol(a);else switch(a){case".":case"+":case"-":appendSymbol(a);break;case"*":appendSymbol("×");break;case"/":appendSymbol("÷");break;case"Backspace":deleteLastEntry();break;case"Escape":clearAll();break;case"Enter":calculate();break}};return onMounted(()=>{window.addEventListener("keydown",handleKeydown)}),onUnmounted(()=>{window.removeEventListener("keydown",handleKeydown)}),(e,a)=>(openBlock(),createElementBlock("div",_hoisted_1,[createBaseVNode("div",_hoisted_2,[createVNode(UserManual)]),createBaseVNode("div",_hoisted_3,[createBaseVNode("div",_hoisted_4,toDisplayString(display.value),1),createBaseVNode("div",_hoisted_5,[(openBlock(!0),createElementBlock(Fragment,null,renderList(unref(buttons),s=>(openBlock(),createElementBlock("button",{"data-key":s.symbol,key:s.symbol,class:normalizeClass(`${s.background} ${s.size} py-3 text-white rounded text-xl`),onClick:o=>onButtonClick(s.symbol)},toDisplayString(s.symbol),11,_hoisted_6))),128))])])]))}}),IndexView_vue_vue_type_style_index_0_scoped_e65c0ed4_lang="",IndexView=_export_sfc(_sfc_main,[["__scopeId","data-v-e65c0ed4"]]);export{IndexView as default};
